// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: test_users.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createTestUser = `-- name: CreateTestUser :one
insert into test_user(id, created_at, updated_at, testid, userid, score, remaining_time, status)
values ($1, $2, $3, $4, $5, $6, $7, $8)
returning id, created_at, updated_at, userid, testid, score, remaining_time, status
`

type CreateTestUserParams struct {
	ID            uuid.UUID
	CreatedAt     time.Time
	UpdatedAt     time.Time
	Testid        uuid.UUID
	Userid        uuid.UUID
	Score         int32
	RemainingTime int32
	Status        TestUserStatus
}

func (q *Queries) CreateTestUser(ctx context.Context, arg CreateTestUserParams) (TestUser, error) {
	row := q.db.QueryRowContext(ctx, createTestUser,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Testid,
		arg.Userid,
		arg.Score,
		arg.RemainingTime,
		arg.Status,
	)
	var i TestUser
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Userid,
		&i.Testid,
		&i.Score,
		&i.RemainingTime,
		&i.Status,
	)
	return i, err
}
